{"ast":null,"code":"var _jsxFileName = \"/Users/sixgarette/Desktop/github/react-autohide-scrollbar/src/components/scrollArea.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollAreaContext = /*#__PURE__*/createContext();\n\nfunction useScrollAreaContext() {\n  _s();\n\n  let context = useContext(ScrollAreaContext);\n\n  if (!context) {\n    return console.error(\"can't use ScrollAreaContext outside ScrollArea Component\");\n  }\n\n  return context;\n}\n\n_s(useScrollAreaContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport default function ScrollArea({\n  debug,\n  width = '100%',\n  height = \"100%\",\n  trackWidth = 12,\n  thumbColor = \"#242526\",\n  trackColor = \"#E4E6EB\",\n  style,\n  renderRightScrollBar = true,\n  children,\n  className,\n  ...arg\n}) {\n  _s2();\n\n  //set up some presu-do css without touching your own .css file\n  let styleSheet = document.getElementById(\"danusorn-custom-scollbar\");\n\n  if (!styleSheet) {\n    styleSheet = document.createElement('style');\n    styleSheet.id = \"danusorn-custom-scollbar\";\n    styleSheet.innerHTML = `\n        .danusorn-custom-scollbar_remove-scroll-bar::-webkit-scrollbar {\n            display: none;\n        }\n        .danusorn-custom-scollbar_remove-scroll-bar{\n        -ms-overflow-style: none; \n        scrollbar-width: none;\n        }\n        .danusorn-custom-scrollbar_scroll-track:hover{\n            opacity:1 !important;\n        }\n      `;\n    document.head.appendChild(styleSheet);\n  }\n\n  const variant = {\n    thumbColor: thumbColor,\n    trackColor: trackColor,\n    trackWidth: trackWidth\n  };\n  const [isScrolling, setIsScrolling] = useState(false);\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [bounding, setBounding] = useState({});\n  const scrollArea = useRef({}); //i just want to scope value that use for calculate some thing\n\n  const updateBounding = () => {\n    setBounding(prev => {\n      let nextState = { ...prev\n      };\n      nextState.offsetHeight = scrollArea.current.offsetHeight;\n      nextState.offsetWidth = scrollArea.current.offsetWidth;\n      nextState.offsetLeft = scrollArea.current.offsetLeft;\n      nextState.offsetTop = scrollArea.current.offsetTop;\n      nextState.clientTop = scrollArea.current.clientTop;\n      nextState.clientLeft = scrollArea.current.clientLeft;\n      nextState.clientWidth = scrollArea.current.clientWidth;\n      nextState.clientHeight = scrollArea.current.clientHeight;\n      nextState.scrollHeight = scrollArea.current.scrollHeight;\n      nextState.scrollTop = scrollArea.current.scrollTop;\n      nextState.top = scrollArea.current.getBoundingClientRect().top;\n      nextState.left = scrollArea.current.getBoundingClientRect().left;\n      nextState.scrollHeightRemain = scrollArea.current.scrollHeight - scrollArea.current.clientHeight;\n      nextState.trackHeight = scrollArea.current.clientHeight;\n      nextState.trackDragState = scrollArea.current.getBoundingClientRect().height / 2;\n      nextState.trackScrollHeightRemain = (scrollArea.current.getBoundingClientRect().height - Math.max(scrollArea.current.getBoundingClientRect().height) * (scrollArea.current.getBoundingClientRect().height / scrollArea.current.scrollHeight), 100);\n      nextState.ratioHeight = scrollArea.current.clientHeight - Math.max(scrollArea.current.getBoundingClientRect().height * (scrollArea.current.getBoundingClientRect().height / scrollArea.current.scrollHeight), 100);\n\n      nextState.realY = e => e ? e.clientY - scrollArea.current.getBoundingClientRect().top : null;\n\n      nextState.buttonHeight = Math.max(scrollArea.current.getBoundingClientRect().height * (scrollArea.current.getBoundingClientRect().height / scrollArea.current.scrollHeight), 100);\n      return nextState;\n    });\n  };\n\n  let stopScrollTimer;\n\n  function handleAreaScroll() {\n    if (stopScrollTimer) {\n      window.clearTimeout(stopScrollTimer);\n    }\n\n    setIsScrolling(true);\n    updateBounding();\n    stopScrollTimer = window.setTimeout(() => setIsScrolling(false), 1000);\n  }\n\n  const handleWindowMouseUp = () => {\n    setIsMouseDown(false);\n  };\n\n  const handleWindowMouseMove = useCallback(e => {\n    if (isMouseDown) {\n      scrollArea.current.scrollTop = (bounding.realY(e) - bounding.buttonHeight / 2) * (bounding.scrollHeightRemain / (bounding.height - bounding.buttonHeight));\n    }\n  }, [isMouseDown]);\n\n  const handleWindowResize = () => {\n    setBounding(prev => {\n      let nextState = { ...prev\n      };\n      nextState.trackHeight = 0;\n      return nextState;\n    });\n  };\n\n  useEffect(() => {\n    setBounding(prev => {\n      let nextState = { ...prev\n      };\n      nextState.limitScrollTop = scrollArea.current.scrollHeight - scrollArea.current.clientHeight;\n      return nextState;\n    });\n  }, []);\n  useEffect(() => {\n    if (!scrollArea) return;\n    let area = scrollArea.current;\n    updateBounding();\n    window.addEventListener('resize', handleWindowResize);\n    area.addEventListener('scroll', handleAreaScroll);\n    window.addEventListener('mousemove', handleWindowMouseMove);\n    window.addEventListener('mouseup', handleWindowMouseUp);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n      area.removeEventListener('scroll', handleAreaScroll);\n      window.removeEventListener('mousemove', handleWindowMouseMove);\n      window.removeEventListener('mouseup', handleWindowMouseUp);\n      clearTimeout(stopScrollTimer);\n    };\n  }, [isMouseDown]);\n  return /*#__PURE__*/_jsxDEV(ScrollAreaContext.Provider, {\n    value: {\n      scrollArea,\n      isScrolling,\n      variant,\n      bounding,\n      isMouseDown,\n      setIsMouseDown\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-scroll-container\": true,\n      ref: scrollArea,\n      style: {\n        height: height,\n        width: width,\n        position: 'relative',\n        overflow: 'auto',\n        ...style\n      },\n      className: `danusorn-custom-scollbar_remove-scroll-bar ${className}`,\n      ...arg,\n      children: [children, /*#__PURE__*/_jsxDEV(ScrollHost, {\n        children: renderRightScrollBar && /*#__PURE__*/_jsxDEV(RightScrollBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ScrollArea, \"IY5aciZ9mlG+m+943frcKHGbmN4=\");\n\n_c = ScrollArea;\n\nconst ScrollHost = ({\n  children\n}) => {\n  _s3();\n\n  const {\n    bounding,\n    variant\n  } = useScrollAreaContext();\n  let scrollHostStyle = useMemo(() => ({\n    display: 'grid',\n    position: 'absolute',\n    width: bounding.clientWidth,\n    top: bounding.scrollTop,\n    overflow: 'visible',\n    left: 0,\n    zIndex: 9999999,\n    gridTemplateColumns: `1fr ${variant.trackWidth}px`,\n    gridTemplateRows: 'empty rightScroll',\n    pointerEvents: 'none',\n    opacity: 0.5\n  }), [variant, bounding]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-scroll-host\": true,\n    style: scrollHostStyle,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(ScrollHost, \"kbWbVCcABXf61efWjwoM9lMPLT0=\", false, function () {\n  return [useScrollAreaContext];\n});\n\n_c2 = ScrollHost;\n\nconst RightScrollBar = () => {\n  _s4();\n\n  const {\n    variant,\n    bounding,\n    isScrolling,\n    setIsMouseDown\n  } = useScrollAreaContext();\n  const scrollTrack = useRef({});\n  const scrollButton = useRef({});\n  let trackStyle = useMemo(() => ({\n    marginTop: 0,\n    padding: '0px 2px',\n    pointerEvents: 'auto',\n    background: variant.trackColor,\n    transition: 'opacity 200ms',\n    opacity: isScrolling ? 0.6 : 0,\n    height: bounding.trackHeight,\n    display: bounding.scrollHeight - bounding.clientHeight < 1 ? 'none' : 'block',\n    width: variant.trackWidth,\n    overflow: 'hidden',\n    gridArea: 'rightScroll'\n  }), [isScrolling, variant, bounding]);\n  const buttonStyle = useMemo(() => ({\n    zIndex: '999999',\n    width: '100%',\n    outline: 'none',\n    background: variant.thumbColor,\n    borderRadius: variant.trackWidth,\n    height: bounding.buttonHeight,\n    transform: `translateY(${bounding.scrollTop * (bounding.ratioHeight / bounding.scrollHeightRemain)}px)`\n  }), [variant, bounding]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-scroll-track\": true,\n    ref: scrollTrack,\n    onMouseDown: () => setIsMouseDown(true),\n    onMouseUp: () => setIsMouseDown(false),\n    style: trackStyle,\n    className: \"danusorn-custom-scrollbar_scroll-track\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: scrollButton,\n      style: buttonStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n};\n\n_s4(RightScrollBar, \"uYu2qnvMGK42sCLt4IWWNEPFC9A=\", false, function () {\n  return [useScrollAreaContext];\n});\n\n_c3 = RightScrollBar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ScrollArea\");\n$RefreshReg$(_c2, \"ScrollHost\");\n$RefreshReg$(_c3, \"RightScrollBar\");","map":{"version":3,"sources":["/Users/sixgarette/Desktop/github/react-autohide-scrollbar/src/components/scrollArea.js"],"names":["React","createContext","useCallback","useContext","useEffect","useMemo","useRef","useState","ScrollAreaContext","useScrollAreaContext","context","console","error","ScrollArea","debug","width","height","trackWidth","thumbColor","trackColor","style","renderRightScrollBar","children","className","arg","styleSheet","document","getElementById","createElement","id","innerHTML","head","appendChild","variant","isScrolling","setIsScrolling","isMouseDown","setIsMouseDown","bounding","setBounding","scrollArea","updateBounding","prev","nextState","offsetHeight","current","offsetWidth","offsetLeft","offsetTop","clientTop","clientLeft","clientWidth","clientHeight","scrollHeight","scrollTop","top","getBoundingClientRect","left","scrollHeightRemain","trackHeight","trackDragState","trackScrollHeightRemain","Math","max","ratioHeight","realY","e","clientY","buttonHeight","stopScrollTimer","handleAreaScroll","window","clearTimeout","setTimeout","handleWindowMouseUp","handleWindowMouseMove","handleWindowResize","limitScrollTop","area","addEventListener","removeEventListener","position","overflow","ScrollHost","scrollHostStyle","display","zIndex","gridTemplateColumns","gridTemplateRows","pointerEvents","opacity","RightScrollBar","scrollTrack","scrollButton","trackStyle","marginTop","padding","background","transition","gridArea","buttonStyle","outline","borderRadius","transform"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,SAAxD,EAAmEC,OAAnE,EAA4EC,MAA5E,EAAoFC,QAApF,QAAoG,OAApG;;AAEA,MAAMC,iBAAiB,gBAAGP,aAAa,EAAvC;;AAEA,SAASQ,oBAAT,GAAgC;AAAA;;AAC5B,MAAIC,OAAO,GAAGP,UAAU,CAACK,iBAAD,CAAxB;;AACA,MAAI,CAACE,OAAL,EAAc;AACV,WAAOC,OAAO,CAACC,KAAR,CAAc,0DAAd,CAAP;AACH;;AACD,SAAOF,OAAP;AACH;;GANQD,oB;;AAQT,eAAe,SAASI,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAK,GAAG,MAAjB;AAAyBC,EAAAA,MAAM,GAAG,MAAlC;AAA0CC,EAAAA,UAAU,GAAG,EAAvD;AAA2DC,EAAAA,UAAU,GAAG,SAAxE;AAAmFC,EAAAA,UAAU,GAAG,SAAhG;AAA2GC,EAAAA,KAA3G;AAAkHC,EAAAA,oBAAoB,GAAG,IAAzI;AAA+IC,EAAAA,QAA/I;AAAyJC,EAAAA,SAAzJ;AAAoK,KAAGC;AAAvK,CAApB,EAAkM;AAAA;;AAE7M;AACA,MAAIC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,0BAAxB,CAAjB;;AAEA,MAAI,CAACF,UAAL,EAAiB;AACbA,IAAAA,UAAU,GAAGC,QAAQ,CAACE,aAAT,CAAuB,OAAvB,CAAb;AACAH,IAAAA,UAAU,CAACI,EAAX,GAAgB,0BAAhB;AACAJ,IAAAA,UAAU,CAACK,SAAX,GAAwB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAXQ;AAYAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,UAA1B;AACH;;AAED,QAAMQ,OAAO,GAAG;AACZf,IAAAA,UAAU,EAAEA,UADA;AAEZC,IAAAA,UAAU,EAAEA,UAFA;AAGZF,IAAAA,UAAU,EAAEA;AAHA,GAAhB;AAMA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAAC+B,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMiC,UAAU,GAAGlC,MAAM,CAAC,EAAD,CAAzB,CAlC6M,CAoC7M;;AACA,QAAMmC,cAAc,GAAG,MAAM;AACzBF,IAAAA,WAAW,CAACG,IAAI,IAAI;AAChB,UAAIC,SAAS,GAAG,EAAE,GAAGD;AAAL,OAAhB;AACAC,MAAAA,SAAS,CAACC,YAAV,GAAyBJ,UAAU,CAACK,OAAX,CAAmBD,YAA5C;AACAD,MAAAA,SAAS,CAACG,WAAV,GAAwBN,UAAU,CAACK,OAAX,CAAmBC,WAA3C;AACAH,MAAAA,SAAS,CAACI,UAAV,GAAuBP,UAAU,CAACK,OAAX,CAAmBE,UAA1C;AACAJ,MAAAA,SAAS,CAACK,SAAV,GAAsBR,UAAU,CAACK,OAAX,CAAmBG,SAAzC;AACAL,MAAAA,SAAS,CAACM,SAAV,GAAsBT,UAAU,CAACK,OAAX,CAAmBI,SAAzC;AACAN,MAAAA,SAAS,CAACO,UAAV,GAAuBV,UAAU,CAACK,OAAX,CAAmBK,UAA1C;AACAP,MAAAA,SAAS,CAACQ,WAAV,GAAwBX,UAAU,CAACK,OAAX,CAAmBM,WAA3C;AACAR,MAAAA,SAAS,CAACS,YAAV,GAAyBZ,UAAU,CAACK,OAAX,CAAmBO,YAA5C;AACAT,MAAAA,SAAS,CAACU,YAAV,GAAyBb,UAAU,CAACK,OAAX,CAAmBQ,YAA5C;AACAV,MAAAA,SAAS,CAACW,SAAV,GAAsBd,UAAU,CAACK,OAAX,CAAmBS,SAAzC;AACAX,MAAAA,SAAS,CAACY,GAAV,GAAgBf,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CD,GAA3D;AACAZ,MAAAA,SAAS,CAACc,IAAV,GAAiBjB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CC,IAA5D;AACAd,MAAAA,SAAS,CAACe,kBAAV,GAA+BlB,UAAU,CAACK,OAAX,CAAmBQ,YAAnB,GAAkCb,UAAU,CAACK,OAAX,CAAmBO,YAApF;AACAT,MAAAA,SAAS,CAACgB,WAAV,GAAwBnB,UAAU,CAACK,OAAX,CAAmBO,YAA3C;AACAT,MAAAA,SAAS,CAACiB,cAAV,GAA2BpB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CxC,MAA3C,GAAoD,CAA/E;AACA2B,MAAAA,SAAS,CAACkB,uBAAV,IAAqCrB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CxC,MAA3C,GAAoD8C,IAAI,CAACC,GAAL,CAASvB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CxC,MAApD,KAA+DwB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CxC,MAA3C,GAAoDwB,UAAU,CAACK,OAAX,CAAmBQ,YAAtI,CAApD,EAAyM,GAA9O;AACAV,MAAAA,SAAS,CAACqB,WAAV,GAAwBxB,UAAU,CAACK,OAAX,CAAmBO,YAAnB,GAAkCU,IAAI,CAACC,GAAL,CAASvB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CxC,MAA3C,IAAqDwB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CxC,MAA3C,GAAoDwB,UAAU,CAACK,OAAX,CAAmBQ,YAA5H,CAAT,EAAoJ,GAApJ,CAA1D;;AACAV,MAAAA,SAAS,CAACsB,KAAV,GAAmBC,CAAD,IAAQA,CAAC,GAAGA,CAAC,CAACC,OAAF,GAAY3B,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CD,GAA1D,GAAgE,IAA3F;;AACAZ,MAAAA,SAAS,CAACyB,YAAV,GAAyBN,IAAI,CAACC,GAAL,CAASvB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CxC,MAA3C,IAAqDwB,UAAU,CAACK,OAAX,CAAmBW,qBAAnB,GAA2CxC,MAA3C,GAAoDwB,UAAU,CAACK,OAAX,CAAmBQ,YAA5H,CAAT,EAAoJ,GAApJ,CAAzB;AACA,aAAOV,SAAP;AACH,KAtBU,CAAX;AAuBH,GAxBD;;AA0BA,MAAI0B,eAAJ;;AAEA,WAASC,gBAAT,GAA4B;AACxB,QAAID,eAAJ,EAAqB;AACjBE,MAAAA,MAAM,CAACC,YAAP,CAAoBH,eAApB;AACH;;AAEDlC,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAM,IAAAA,cAAc;AAEd4B,IAAAA,eAAe,GAAGE,MAAM,CAACE,UAAP,CAAkB,MAAMtC,cAAc,CAAC,KAAD,CAAtC,EAA+C,IAA/C,CAAlB;AACH;;AAED,QAAMuC,mBAAmB,GAAG,MAAM;AAC9BrC,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD;;AAIA,QAAMsC,qBAAqB,GAAGzE,WAAW,CAAEgE,CAAD,IAAO;AAC7C,QAAI9B,WAAJ,EAAiB;AACbI,MAAAA,UAAU,CAACK,OAAX,CAAmBS,SAAnB,GAA+B,CAAChB,QAAQ,CAAC2B,KAAT,CAAeC,CAAf,IAAqB5B,QAAQ,CAAC8B,YAAT,GAAwB,CAA9C,KAAqD9B,QAAQ,CAACoB,kBAAT,IAA+BpB,QAAQ,CAACtB,MAAT,GAAkBsB,QAAQ,CAAC8B,YAA1D,CAArD,CAA/B;AACH;AACJ,GAJwC,EAIvC,CAAChC,WAAD,CAJuC,CAAzC;;AAMA,QAAMwC,kBAAkB,GAAG,MAAK;AAC5BrC,IAAAA,WAAW,CAACG,IAAI,IAAI;AAChB,UAAIC,SAAS,GAAG,EAAE,GAAGD;AAAL,OAAhB;AACAC,MAAAA,SAAS,CAACgB,WAAV,GAAwB,CAAxB;AACA,aAAOhB,SAAP;AACH,KAJU,CAAX;AAKH,GAND;;AAQAvC,EAAAA,SAAS,CAAC,MAAI;AACVmC,IAAAA,WAAW,CAACG,IAAI,IAAI;AAChB,UAAIC,SAAS,GAAG,EAAE,GAAGD;AAAL,OAAhB;AACAC,MAAAA,SAAS,CAACkC,cAAV,GAA2BrC,UAAU,CAACK,OAAX,CAAmBQ,YAAnB,GAAkCb,UAAU,CAACK,OAAX,CAAmBO,YAAhF;AACA,aAAOT,SAAP;AACH,KAJU,CAAX;AAKH,GANQ,EAMP,EANO,CAAT;AAQAvC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACoC,UAAL,EAAiB;AAEjB,QAAIsC,IAAI,GAAGtC,UAAU,CAACK,OAAtB;AAEAJ,IAAAA,cAAc;AAEd8B,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCH,kBAAlC;AACAE,IAAAA,IAAI,CAACC,gBAAL,CAAsB,QAAtB,EAAgCT,gBAAhC;AACAC,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,WAAxB,EAAqCJ,qBAArC;AACAJ,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,SAAxB,EAAmCL,mBAAnC;AAEA,WAAO,MAAM;AACTH,MAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCJ,kBAArC;AACAE,MAAAA,IAAI,CAACE,mBAAL,CAAyB,QAAzB,EAAmCV,gBAAnC;AACAC,MAAAA,MAAM,CAACS,mBAAP,CAA2B,WAA3B,EAAwCL,qBAAxC;AACAJ,MAAAA,MAAM,CAACS,mBAAP,CAA2B,SAA3B,EAAsCN,mBAAtC;AACAF,MAAAA,YAAY,CAACH,eAAD,CAAZ;AACH,KAND;AAQH,GApBQ,EAoBN,CAACjC,WAAD,CApBM,CAAT;AAuBA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAF;AAAcN,MAAAA,WAAd;AAA2BD,MAAAA,OAA3B;AAAoCK,MAAAA,QAApC;AAA8CF,MAAAA,WAA9C;AAA2DC,MAAAA;AAA3D,KAAnC;AAAA,2BACI;AAAK,mCAAL;AAA2B,MAAA,GAAG,EAAEG,UAAhC;AAA4C,MAAA,KAAK,EAAE;AAAExB,QAAAA,MAAM,EAAEA,MAAV;AAAkBD,QAAAA,KAAK,EAAEA,KAAzB;AAAgCkE,QAAAA,QAAQ,EAAE,UAA1C;AAAsDC,QAAAA,QAAQ,EAAE,MAAhE;AAAwE,WAAG9D;AAA3E,OAAnD;AAAuI,MAAA,SAAS,EAAG,8CAA6CG,SAAU,EAA1M;AAAA,SAAiNC,GAAjN;AAAA,iBACKF,QADL,eAEI,QAAC,UAAD;AAAA,kBAEQD,oBAAoB,iBAAI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAFhC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;IAzIuBR,U;;KAAAA,U;;AA2IxB,MAAMsE,UAAU,GAAG,CAAC;AAAE7D,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAM;AAAEgB,IAAAA,QAAF;AAAYL,IAAAA;AAAZ,MAAwBxB,oBAAoB,EAAlD;AAEA,MAAI2E,eAAe,GAAG/E,OAAO,CAAC,OAAO;AACjCgF,IAAAA,OAAO,EAAE,MADwB;AAEjCJ,IAAAA,QAAQ,EAAE,UAFuB;AAGjClE,IAAAA,KAAK,EAAEuB,QAAQ,CAACa,WAHiB;AAIjCI,IAAAA,GAAG,EAAEjB,QAAQ,CAACgB,SAJmB;AAKjC4B,IAAAA,QAAQ,EAAC,SALwB;AAMjCzB,IAAAA,IAAI,EAAC,CAN4B;AAOjC6B,IAAAA,MAAM,EAAC,OAP0B;AAQjCC,IAAAA,mBAAmB,EAAG,OAAMtD,OAAO,CAAChB,UAAW,IARd;AASjCuE,IAAAA,gBAAgB,EAAE,mBATe;AAUjCC,IAAAA,aAAa,EAAE,MAVkB;AAWjCC,IAAAA,OAAO,EAAE;AAXwB,GAAP,CAAD,EAYzB,CAACzD,OAAD,EAAUK,QAAV,CAZyB,CAA7B;AAcA,sBACI;AAAK,4BAAL;AAAsB,IAAA,KAAK,EAAE8C,eAA7B;AAAA,cACK9D;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBD;;IAAM6D,U;UAC4B1E,oB;;;MAD5B0E,U;;AAwBN,MAAMQ,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM;AAAE1D,IAAAA,OAAF;AAAWK,IAAAA,QAAX;AAAqBJ,IAAAA,WAArB;AAAkCG,IAAAA;AAAlC,MAAqD5B,oBAAoB,EAA/E;AAEA,QAAMmF,WAAW,GAAGtF,MAAM,CAAC,EAAD,CAA1B;AACA,QAAMuF,YAAY,GAAGvF,MAAM,CAAC,EAAD,CAA3B;AAEA,MAAIwF,UAAU,GAAGzF,OAAO,CAAC,OAAO;AAC5B0F,IAAAA,SAAS,EAAC,CADkB;AAE5BC,IAAAA,OAAO,EAAE,SAFmB;AAG5BP,IAAAA,aAAa,EAAE,MAHa;AAI5BQ,IAAAA,UAAU,EAAEhE,OAAO,CAACd,UAJQ;AAK5B+E,IAAAA,UAAU,EAAE,eALgB;AAM5BR,IAAAA,OAAO,EAAExD,WAAW,GAAG,GAAH,GAAS,CAND;AAO5BlB,IAAAA,MAAM,EAAEsB,QAAQ,CAACqB,WAPW;AAQ5B0B,IAAAA,OAAO,EAAE/C,QAAQ,CAACe,YAAT,GAAwBf,QAAQ,CAACc,YAAjC,GAAgD,CAAhD,GAAoD,MAApD,GAA6D,OAR1C;AAS5BrC,IAAAA,KAAK,EAAEkB,OAAO,CAAChB,UATa;AAU5BiE,IAAAA,QAAQ,EAAE,QAVkB;AAW5BiB,IAAAA,QAAQ,EAAE;AAXkB,GAAP,CAAD,EAYpB,CAACjE,WAAD,EAAcD,OAAd,EAAuBK,QAAvB,CAZoB,CAAxB;AAcA,QAAM8D,WAAW,GAAG/F,OAAO,CAAC,OAAO;AAC/BiF,IAAAA,MAAM,EAAC,QADwB;AAE/BvE,IAAAA,KAAK,EAAE,MAFwB;AAG/BsF,IAAAA,OAAO,EAAE,MAHsB;AAI/BJ,IAAAA,UAAU,EAAEhE,OAAO,CAACf,UAJW;AAK/BoF,IAAAA,YAAY,EAAErE,OAAO,CAAChB,UALS;AAM/BD,IAAAA,MAAM,EAAEsB,QAAQ,CAAC8B,YANc;AAO/BmC,IAAAA,SAAS,EAAG,cAAajE,QAAQ,CAACgB,SAAT,IAAsBhB,QAAQ,CAAC0B,WAAT,GAAuB1B,QAAQ,CAACoB,kBAAtD,CAA0E;AAPpE,GAAP,CAAD,EAQvB,CAACzB,OAAD,EAAUK,QAAV,CARuB,CAA3B;AAUA,sBACI;AAAK,6BAAL;AAAuB,IAAA,GAAG,EAAEsD,WAA5B;AAAyC,IAAA,WAAW,EAAE,MAAMvD,cAAc,CAAC,IAAD,CAA1E;AAAkF,IAAA,SAAS,EAAE,MAAMA,cAAc,CAAC,KAAD,CAAjH;AAA0H,IAAA,KAAK,EAAEyD,UAAjI;AAA6I,IAAA,SAAS,EAAC,wCAAvJ;AAAA,2BACI;AAAQ,MAAA,GAAG,EAAED,YAAb;AAA2B,MAAA,KAAK,EAAEO;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApCD;;IAAMT,c;UAEyDlF,oB;;;MAFzDkF,c","sourcesContent":["import React, { createContext, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\n\nconst ScrollAreaContext = createContext();\n\nfunction useScrollAreaContext() {\n    let context = useContext(ScrollAreaContext);\n    if (!context) {\n        return console.error(\"can't use ScrollAreaContext outside ScrollArea Component\")\n    }\n    return context;\n}\n\nexport default function ScrollArea({ debug, width = '100%', height = \"100%\", trackWidth = 12, thumbColor = \"#242526\", trackColor = \"#E4E6EB\", style, renderRightScrollBar = true, children, className, ...arg }) {\n\n    //set up some presu-do css without touching your own .css file\n    let styleSheet = document.getElementById(\"danusorn-custom-scollbar\");\n\n    if (!styleSheet) {\n        styleSheet = document.createElement('style');\n        styleSheet.id = \"danusorn-custom-scollbar\";\n        styleSheet.innerHTML = `\n        .danusorn-custom-scollbar_remove-scroll-bar::-webkit-scrollbar {\n            display: none;\n        }\n        .danusorn-custom-scollbar_remove-scroll-bar{\n        -ms-overflow-style: none; \n        scrollbar-width: none;\n        }\n        .danusorn-custom-scrollbar_scroll-track:hover{\n            opacity:1 !important;\n        }\n      `;\n        document.head.appendChild(styleSheet);\n    }\n\n    const variant = {\n        thumbColor: thumbColor,\n        trackColor: trackColor,\n        trackWidth: trackWidth,\n    }\n\n    const [isScrolling, setIsScrolling] = useState(false);\n    const [isMouseDown, setIsMouseDown] = useState(false);\n\n    const [bounding, setBounding] = useState({})\n\n    const scrollArea = useRef({});\n\n    //i just want to scope value that use for calculate some thing\n    const updateBounding = () => {\n        setBounding(prev => {\n            let nextState = { ...prev };\n            nextState.offsetHeight = scrollArea.current.offsetHeight;\n            nextState.offsetWidth = scrollArea.current.offsetWidth;\n            nextState.offsetLeft = scrollArea.current.offsetLeft;\n            nextState.offsetTop = scrollArea.current.offsetTop;\n            nextState.clientTop = scrollArea.current.clientTop;\n            nextState.clientLeft = scrollArea.current.clientLeft;\n            nextState.clientWidth = scrollArea.current.clientWidth;\n            nextState.clientHeight = scrollArea.current.clientHeight;\n            nextState.scrollHeight = scrollArea.current.scrollHeight;\n            nextState.scrollTop = scrollArea.current.scrollTop;\n            nextState.top = scrollArea.current.getBoundingClientRect().top;\n            nextState.left = scrollArea.current.getBoundingClientRect().left;\n            nextState.scrollHeightRemain = scrollArea.current.scrollHeight - scrollArea.current.clientHeight;\n            nextState.trackHeight = scrollArea.current.clientHeight;\n            nextState.trackDragState = scrollArea.current.getBoundingClientRect().height / 2;\n            nextState.trackScrollHeightRemain = (scrollArea.current.getBoundingClientRect().height - Math.max(scrollArea.current.getBoundingClientRect().height) * (scrollArea.current.getBoundingClientRect().height / scrollArea.current.scrollHeight), 100);\n            nextState.ratioHeight = scrollArea.current.clientHeight - Math.max(scrollArea.current.getBoundingClientRect().height * (scrollArea.current.getBoundingClientRect().height / scrollArea.current.scrollHeight), 100);\n            nextState.realY = (e) => (e ? e.clientY - scrollArea.current.getBoundingClientRect().top : null);\n            nextState.buttonHeight = Math.max(scrollArea.current.getBoundingClientRect().height * (scrollArea.current.getBoundingClientRect().height / scrollArea.current.scrollHeight), 100);\n            return nextState;\n        })\n    }\n\n    let stopScrollTimer;\n\n    function handleAreaScroll() {\n        if (stopScrollTimer) {\n            window.clearTimeout(stopScrollTimer);\n        }\n\n        setIsScrolling(true)\n        updateBounding();\n\n        stopScrollTimer = window.setTimeout(() => setIsScrolling(false), 1000);\n    }\n\n    const handleWindowMouseUp = () => {\n        setIsMouseDown(false);\n    }\n\n    const handleWindowMouseMove = useCallback((e) => {\n        if (isMouseDown) {\n            scrollArea.current.scrollTop = (bounding.realY(e) - (bounding.buttonHeight / 2)) * (bounding.scrollHeightRemain / (bounding.height - bounding.buttonHeight));\n        }\n    },[isMouseDown])\n\n    const handleWindowResize = () =>{\n        setBounding(prev => {\n            let nextState = { ...prev };\n            nextState.trackHeight = 0;\n            return nextState;\n        })\n    }\n\n    useEffect(()=>{\n        setBounding(prev => {\n            let nextState = { ...prev };\n            nextState.limitScrollTop = scrollArea.current.scrollHeight - scrollArea.current.clientHeight;\n            return nextState;\n        })\n    },[])\n\n    useEffect(() => {\n        if (!scrollArea) return;\n\n        let area = scrollArea.current;\n\n        updateBounding();\n\n        window.addEventListener('resize', handleWindowResize);\n        area.addEventListener('scroll', handleAreaScroll);\n        window.addEventListener('mousemove', handleWindowMouseMove);\n        window.addEventListener('mouseup', handleWindowMouseUp);\n\n        return () => {\n            window.removeEventListener('resize', handleWindowResize);\n            area.removeEventListener('scroll', handleAreaScroll);\n            window.removeEventListener('mousemove', handleWindowMouseMove);\n            window.removeEventListener('mouseup', handleWindowMouseUp);\n            clearTimeout(stopScrollTimer)\n        }\n\n    }, [isMouseDown])\n\n\n    return (\n        <ScrollAreaContext.Provider value={{ scrollArea, isScrolling, variant, bounding, isMouseDown, setIsMouseDown }}>\n            <div data-scroll-container ref={scrollArea} style={{ height: height, width: width, position: 'relative', overflow: 'auto', ...style }} className={`danusorn-custom-scollbar_remove-scroll-bar ${className}`} {...arg}>\n                {children}\n                <ScrollHost>\n                    {\n                        renderRightScrollBar && <RightScrollBar />\n                    }\n                </ScrollHost>\n            </div>\n        </ScrollAreaContext.Provider>\n    )\n}\n\nconst ScrollHost = ({ children }) => {\n    const { bounding, variant } = useScrollAreaContext();\n\n    let scrollHostStyle = useMemo(() => ({\n        display: 'grid',\n        position: 'absolute',\n        width: bounding.clientWidth,\n        top: bounding.scrollTop,\n        overflow:'visible',\n        left:0,\n        zIndex:9999999,\n        gridTemplateColumns: `1fr ${variant.trackWidth}px`,\n        gridTemplateRows: 'empty rightScroll',\n        pointerEvents: 'none',\n        opacity: 0.5,\n    }), [variant, bounding])\n\n    return (\n        <div data-scroll-host style={scrollHostStyle}>\n            {children}\n        </div>\n    )\n}\n\nconst RightScrollBar = () => {\n\n    const { variant, bounding, isScrolling, setIsMouseDown } = useScrollAreaContext();\n\n    const scrollTrack = useRef({});\n    const scrollButton = useRef({});\n\n    let trackStyle = useMemo(() => ({\n        marginTop:0,\n        padding: '0px 2px',\n        pointerEvents: 'auto',\n        background: variant.trackColor,\n        transition: 'opacity 200ms',\n        opacity: isScrolling ? 0.6 : 0,\n        height: bounding.trackHeight,\n        display: bounding.scrollHeight - bounding.clientHeight < 1 ? 'none' : 'block',\n        width: variant.trackWidth,\n        overflow: 'hidden',\n        gridArea: 'rightScroll',\n    }), [isScrolling, variant, bounding])\n\n    const buttonStyle = useMemo(() => ({\n        zIndex:'999999',\n        width: '100%',\n        outline: 'none',\n        background: variant.thumbColor,\n        borderRadius: variant.trackWidth,\n        height: bounding.buttonHeight,\n        transform: `translateY(${bounding.scrollTop * (bounding.ratioHeight / bounding.scrollHeightRemain)}px)`,\n    }), [variant, bounding])\n\n    return (\n        <div data-scroll-track ref={scrollTrack} onMouseDown={() => setIsMouseDown(true)} onMouseUp={() => setIsMouseDown(false)} style={trackStyle} className=\"danusorn-custom-scrollbar_scroll-track\">\n            <button ref={scrollButton} style={buttonStyle}></button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}